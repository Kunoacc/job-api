// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Person {
  id  Int @default(autoincrement()) @id
  name String
  phone String?
  picture String?
  headline String?
  username String @unique
  links String?
  bio String?
  profileWeight Float @default(0)
  location String?
  timezone String?
  isVerified Boolean
  fullyFetched Boolean? @default(true)
  generatedAt DateTime? @default(now())
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  preferredJobCompensationCurrency String?
  preferredJobCompensationAmount Float?
  preferredJobCompensationCycle String?
  preferredGigCompensationCurrency String?
  preferredGigCompensationAmount Float?
  preferredGigCompensationCycle String?
  isOpenToInterships Boolean?
  isOpenToMentoring Boolean?
  isOpenToGigs Boolean?
  isOpenToJobs Boolean?
  skills Skills[]
  experiences Experience[]
  interests Interest[]
  companies Company[]
}

model Skills {
  id  Int @default(autoincrement()) @id
  recommendations Int? @default(0)
  code String @unique
  skillWeight Float? @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  person Person @relation(fields: [personId], references: [id])
  skill Skill @relation(fields: [skillId], references: [id])
  skillId Int
  personId Int
}

model Skill {
  id  Int @default(autoincrement()) @id
  code Int 
  name String @unique
}

model Experience {
  id Int @default(autoincrement()) @id
  code String @unique
  category String?
  fromDate DateTime?
  toDate DateTime?
  role String
  location String?
  responsibilities String?
  isRemote Boolean @default(false)
  person Person @relation(fields: [personId], references: [id])
  company Company? @relation(fields: [companyId], references: [id])
  companyId Int?
  personId Int
}

model Interest {
  id Int @default(autoincrement()) @id
  code String @unique
  skill Skill @relation(fields: [skillId], references: [id])
  person Person @relation(fields: [personId], references: [id])
  personId Int
  skillId Int
}

model Company {
  id Int @default(autoincrement()) @id
  name String @unique
  logo String?
  people Person[]
  profile CompanyProfile?
}

model Opportunity {
  id Int @default(autoincrement()) @id
  uid String @unique
  title String
  poster Person
  isReviewed Boolean
  benefits String?
  responsibilities String?
  company Company
  structure String?
  location String?
  isRemote Boolean?
  additionalInformation String?
  deadline DateTime?
  type String
  skills Skill[]
  members String?
  minSalaryRange Int?
  maxSalaryRange Int?
  compensationPeriod String?
  compensationCurrency String?
  status String
}

model CompanyProfile {
  id Int @default(autoincrement()) @id
  culture String?
  summary String?
  company Company @relation(fields: [companyId], references: [id])
  companyId Int @unique
}
